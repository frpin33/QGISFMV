# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui\ui_FmvMultiplexer.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_VideoMultiplexer(object):
    def setupUi(self, VideoMultiplexer):
        VideoMultiplexer.setObjectName("VideoMultiplexer")
        VideoMultiplexer.resize(438, 417)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(VideoMultiplexer.sizePolicy().hasHeightForWidth())
        VideoMultiplexer.setSizePolicy(sizePolicy)
        VideoMultiplexer.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        VideoMultiplexer.setAcceptDrops(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/imgFMV/images/multiplexer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        VideoMultiplexer.setWindowIcon(icon)
        VideoMultiplexer.setWindowOpacity(1.0)
        VideoMultiplexer.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        VideoMultiplexer.setAnimated(False)
        VideoMultiplexer.setDockNestingEnabled(True)
        self.centralwidget = QtWidgets.QWidget(VideoMultiplexer)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.formWidget = QtWidgets.QWidget(self.centralwidget)
        self.formWidget.setObjectName("formWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.formWidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.formWidget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout.addWidget(self.lineEdit_2)
        self.pushButton = QtWidgets.QPushButton(self.formWidget)
        self.pushButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/imgFMV/images/opened-folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon1)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout.addWidget(self.formWidget)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.formWidget1 = QtWidgets.QWidget(self.centralwidget)
        self.formWidget1.setObjectName("formWidget1")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.formWidget1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.formWidget1)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.horizontalLayout_2.addWidget(self.lineEdit_3)
        self.pushButton_2 = QtWidgets.QPushButton(self.formWidget1)
        self.pushButton_2.setText("")
        self.pushButton_2.setIcon(icon1)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        self.verticalLayout.addWidget(self.formWidget1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.formWidget2 = QtWidgets.QWidget(self.centralwidget)
        self.formWidget2.setObjectName("formWidget2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.formWidget2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.formWidget2)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout_3.addWidget(self.lineEdit_4)
        self.pushButton_3 = QtWidgets.QPushButton(self.formWidget2)
        self.pushButton_3.setText("")
        self.pushButton_3.setIcon(icon1)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_3.addWidget(self.pushButton_3)
        self.verticalLayout.addWidget(self.formWidget2)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.verticalLayout.addWidget(self.label_4)
        self.formWidget3 = QtWidgets.QWidget(self.centralwidget)
        self.formWidget3.setObjectName("formWidget3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.formWidget3)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.formWidget3)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.horizontalLayout_4.addWidget(self.lineEdit_5)
        self.pushButton_4 = QtWidgets.QPushButton(self.formWidget3)
        self.pushButton_4.setText("")
        self.pushButton_4.setIcon(icon1)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_4.addWidget(self.pushButton_4)
        self.verticalLayout.addWidget(self.formWidget3)
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout.addWidget(self.checkBox)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        self.formWidget4 = QtWidgets.QWidget(self.centralwidget)
        self.formWidget4.setObjectName("formWidget4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.formWidget4)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.lineEdit = QtWidgets.QLineEdit(self.formWidget4)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout_5.addWidget(self.lineEdit)
        self.pushButton_5 = QtWidgets.QPushButton(self.formWidget4)
        self.pushButton_5.setText("")
        self.pushButton_5.setIcon(icon1)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout_5.addWidget(self.pushButton_5)
        self.verticalLayout.addWidget(self.formWidget4)
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout.addWidget(self.pushButton_6)
        VideoMultiplexer.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(VideoMultiplexer)
        self.statusbar.setObjectName("statusbar")
        VideoMultiplexer.setStatusBar(self.statusbar)
        self.actionGray = QtWidgets.QAction(VideoMultiplexer)
        self.actionGray.setCheckable(True)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/imgFMV/images/grayscale.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGray.setIcon(icon2)
        self.actionGray.setObjectName("actionGray")
        self.actionEdge_Detection = QtWidgets.QAction(VideoMultiplexer)
        self.actionEdge_Detection.setCheckable(True)
        self.actionEdge_Detection.setObjectName("actionEdge_Detection")
        self.actionCapture_Current_Frame = QtWidgets.QAction(VideoMultiplexer)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/imgFMV/images/screenshot.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCapture_Current_Frame.setIcon(icon3)
        self.actionCapture_Current_Frame.setObjectName("actionCapture_Current_Frame")
        self.actionExtract_All_Frames = QtWidgets.QAction(VideoMultiplexer)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/imgFMV/images/capture_all_frames.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExtract_All_Frames.setIcon(icon4)
        self.actionExtract_All_Frames.setObjectName("actionExtract_All_Frames")
        self.actionShow_Metadata = QtWidgets.QAction(VideoMultiplexer)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/imgFMV/images/show-metadata.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShow_Metadata.setIcon(icon5)
        self.actionShow_Metadata.setObjectName("actionShow_Metadata")
        self.actionConverter_Video = QtWidgets.QAction(VideoMultiplexer)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/imgFMV/images/video-converter.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionConverter_Video.setIcon(icon6)
        self.actionConverter_Video.setObjectName("actionConverter_Video")
        self.actionSave_Video_Info = QtWidgets.QAction(VideoMultiplexer)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/imgFMV/images/save-video-info.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave_Video_Info.setIcon(icon7)
        self.actionSave_Video_Info.setObjectName("actionSave_Video_Info")
        self.actionAudio = QtWidgets.QAction(VideoMultiplexer)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/imgFMV/images/show-bitrate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAudio.setIcon(icon8)
        self.actionAudio.setObjectName("actionAudio")
        self.actionVideo = QtWidgets.QAction(VideoMultiplexer)
        self.actionVideo.setIcon(icon8)
        self.actionVideo.setObjectName("actionVideo")
        self.actionAudio_Video = QtWidgets.QAction(VideoMultiplexer)
        self.actionAudio_Video.setObjectName("actionAudio_Video")
        self.actionSave_Audio = QtWidgets.QAction(VideoMultiplexer)
        self.actionSave_Audio.setObjectName("actionSave_Audio")
        self.actionSave_Video = QtWidgets.QAction(VideoMultiplexer)
        self.actionSave_Video.setObjectName("actionSave_Video")
        self.actionSave_All = QtWidgets.QAction(VideoMultiplexer)
        self.actionSave_All.setObjectName("actionSave_All")
        self.actionShow_Video_Info = QtWidgets.QAction(VideoMultiplexer)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/imgFMV/images/video-info.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShow_Video_Info.setIcon(icon9)
        self.actionShow_Video_Info.setObjectName("actionShow_Video_Info")
        self.actionInvert_Color = QtWidgets.QAction(VideoMultiplexer)
        self.actionInvert_Color.setCheckable(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/imgFMV/images/invert-colors.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInvert_Color.setIcon(icon10)
        self.actionInvert_Color.setObjectName("actionInvert_Color")
        self.actionMono_Filter = QtWidgets.QAction(VideoMultiplexer)
        self.actionMono_Filter.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/imgFMV/images/mono.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMono_Filter.setIcon(icon11)
        self.actionMono_Filter.setObjectName("actionMono_Filter")
        self.actionCanny_edge_detection = QtWidgets.QAction(VideoMultiplexer)
        self.actionCanny_edge_detection.setCheckable(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/imgFMV/images/canny.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCanny_edge_detection.setIcon(icon12)
        self.actionCanny_edge_detection.setObjectName("actionCanny_edge_detection")
        self.actionZoom_Rectangle = QtWidgets.QAction(VideoMultiplexer)
        self.actionZoom_Rectangle.setCheckable(True)
        self.actionZoom_Rectangle.setEnabled(True)
        self.actionZoom_Rectangle.setObjectName("actionZoom_Rectangle")
        self.actionMagnifying_glass = QtWidgets.QAction(VideoMultiplexer)
        self.actionMagnifying_glass.setCheckable(True)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/imgFMV/images/magnifier-glass.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMagnifying_glass.setIcon(icon13)
        self.actionMagnifying_glass.setObjectName("actionMagnifying_glass")
        self.actionAuto_Contrast_Filter = QtWidgets.QAction(VideoMultiplexer)
        self.actionAuto_Contrast_Filter.setCheckable(True)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/imgFMV/images/automatic-contrast.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAuto_Contrast_Filter.setIcon(icon14)
        self.actionAuto_Contrast_Filter.setObjectName("actionAuto_Contrast_Filter")
        self.actionCreate_Mosaic = QtWidgets.QAction(VideoMultiplexer)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/imgFMV/images/mosaic.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreate_Mosaic.setIcon(icon15)
        self.actionCreate_Mosaic.setObjectName("actionCreate_Mosaic")
        self.actionDraw_Pinpoint = QtWidgets.QAction(VideoMultiplexer)
        self.actionDraw_Pinpoint.setCheckable(True)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-point.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDraw_Pinpoint.setIcon(icon16)
        self.actionDraw_Pinpoint.setObjectName("actionDraw_Pinpoint")
        self.actionDraw_Line = QtWidgets.QAction(VideoMultiplexer)
        self.actionDraw_Line.setCheckable(True)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-polyline.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDraw_Line.setIcon(icon17)
        self.actionDraw_Line.setObjectName("actionDraw_Line")
        self.actionDraw_Polygon = QtWidgets.QAction(VideoMultiplexer)
        self.actionDraw_Polygon.setCheckable(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-polygon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDraw_Polygon.setIcon(icon18)
        self.actionDraw_Polygon.setObjectName("actionDraw_Polygon")
        self.actionObject_Tracking = QtWidgets.QAction(VideoMultiplexer)
        self.actionObject_Tracking.setCheckable(True)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/imgFMV/images/object-tracking.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionObject_Tracking.setIcon(icon19)
        self.actionObject_Tracking.setObjectName("actionObject_Tracking")
        self.actionRuler = QtWidgets.QAction(VideoMultiplexer)
        self.actionRuler.setCheckable(True)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/imgFMV/images/ruler.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRuler.setIcon(icon20)
        self.actionRuler.setObjectName("actionRuler")
        self.actionHandDraw = QtWidgets.QAction(VideoMultiplexer)
        self.actionHandDraw.setCheckable(True)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/imgFMV/images/HandDraw.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHandDraw.setIcon(icon21)
        self.actionHandDraw.setObjectName("actionHandDraw")
        self.actionMirroredH = QtWidgets.QAction(VideoMultiplexer)
        self.actionMirroredH.setCheckable(True)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/imgFMV/images/mirrored.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMirroredH.setIcon(icon22)
        self.actionMirroredH.setObjectName("actionMirroredH")
        self.actionCensure = QtWidgets.QAction(VideoMultiplexer)
        self.actionCensure.setCheckable(True)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/imgFMV/images/censure-pencil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCensure.setIcon(icon23)
        self.actionCensure.setObjectName("actionCensure")
        self.actionRemove_Last_censured = QtWidgets.QAction(VideoMultiplexer)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/imgFMV/images/censure-pencil-remove-last.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_Last_censured.setIcon(icon24)
        self.actionRemove_Last_censured.setObjectName("actionRemove_Last_censured")
        self.actionRemove_All_censured = QtWidgets.QAction(VideoMultiplexer)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/imgFMV/images/censure-pencil-remove-all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_All_censured.setIcon(icon25)
        self.actionRemove_All_censured.setObjectName("actionRemove_All_censured")
        self.actionDraw_Polygon_remove_last = QtWidgets.QAction(VideoMultiplexer)
        self.actionDraw_Polygon_remove_last.setCheckable(False)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-polygon-remove-last.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDraw_Polygon_remove_last.setIcon(icon26)
        self.actionDraw_Polygon_remove_last.setObjectName("actionDraw_Polygon_remove_last")
        self.actionDraw_Polygon_remove_all = QtWidgets.QAction(VideoMultiplexer)
        self.actionDraw_Polygon_remove_all.setCheckable(False)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-polygon-remove-all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDraw_Polygon_remove_all.setIcon(icon27)
        self.actionDraw_Polygon_remove_all.setObjectName("actionDraw_Polygon_remove_all")
        self.actionRemove_Last_Pinpoint = QtWidgets.QAction(VideoMultiplexer)
        self.actionRemove_Last_Pinpoint.setCheckable(False)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-point-remove-last.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_Last_Pinpoint.setIcon(icon28)
        self.actionRemove_Last_Pinpoint.setObjectName("actionRemove_Last_Pinpoint")
        self.actionRemove_All_Pinpoint = QtWidgets.QAction(VideoMultiplexer)
        self.actionRemove_All_Pinpoint.setCheckable(False)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-point-remove-all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_All_Pinpoint.setIcon(icon29)
        self.actionRemove_All_Pinpoint.setObjectName("actionRemove_All_Pinpoint")
        self.actionRemove_All_Line = QtWidgets.QAction(VideoMultiplexer)
        self.actionRemove_All_Line.setCheckable(False)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-polyline-remove-all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_All_Line.setIcon(icon30)
        self.actionRemove_All_Line.setObjectName("actionRemove_All_Line")
        self.actionLast_Segment_Line = QtWidgets.QAction(VideoMultiplexer)
        self.actionLast_Segment_Line.setCheckable(False)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-polyline-remove-last-segment.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLast_Segment_Line.setIcon(icon31)
        self.actionLast_Segment_Line.setObjectName("actionLast_Segment_Line")
        self.actionRemove_Last_Line = QtWidgets.QAction(VideoMultiplexer)
        self.actionRemove_Last_Line.setCheckable(False)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/imgFMV/images/draw-polyline-remove-last.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_Last_Line.setIcon(icon32)
        self.actionRemove_Last_Line.setObjectName("actionRemove_Last_Line")
        self.actionCenter_on_Platform = QtWidgets.QAction(VideoMultiplexer)
        self.actionCenter_on_Platform.setCheckable(True)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/imgFMV/images/center_platform.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCenter_on_Platform.setIcon(icon33)
        self.actionCenter_on_Platform.setObjectName("actionCenter_on_Platform")
        self.actionCenter_on_Footprint = QtWidgets.QAction(VideoMultiplexer)
        self.actionCenter_on_Footprint.setCheckable(True)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/imgFMV/images/center_footprint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCenter_on_Footprint.setIcon(icon34)
        self.actionCenter_on_Footprint.setObjectName("actionCenter_on_Footprint")
        self.actionCenter_Target = QtWidgets.QAction(VideoMultiplexer)
        self.actionCenter_Target.setCheckable(True)
        self.actionCenter_Target.setChecked(True)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/imgFMV/images/center_target.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCenter_Target.setIcon(icon35)
        self.actionCenter_Target.setObjectName("actionCenter_Target")
        self.actionNDVI = QtWidgets.QAction(VideoMultiplexer)
        self.actionNDVI.setCheckable(True)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/imgFMV/images/ndvi.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNDVI.setIcon(icon36)
        self.actionNDVI.setObjectName("actionNDVI")
        self.actionCapture_Georeferenced_Frame = QtWidgets.QAction(VideoMultiplexer)
        self.actionCapture_Georeferenced_Frame.setObjectName("actionCapture_Georeferenced_Frame")

        self.retranslateUi(VideoMultiplexer)
        self.actionGray.triggered['bool'].connect(VideoMultiplexer.grayFilter)
        self.actionShow_Metadata.triggered.connect(VideoMultiplexer.OpenQgsFmvMetadata)
        self.actionExtract_All_Frames.triggered.connect(VideoMultiplexer.ExtractAllFrames)
        self.actionCapture_Current_Frame.triggered.connect(VideoMultiplexer.ExtractCurrentFrame)
        self.actionSave_Video_Info.triggered.connect(VideoMultiplexer.saveInfoToJson)
        self.actionAudio_Video.triggered.connect(VideoMultiplexer.CreateBitratePlot)
        self.actionAudio.triggered.connect(VideoMultiplexer.CreateBitratePlot)
        self.actionVideo.triggered.connect(VideoMultiplexer.CreateBitratePlot)
        self.actionSave_All.triggered.connect(VideoMultiplexer.CreateBitratePlot)
        self.actionSave_Audio.triggered.connect(VideoMultiplexer.CreateBitratePlot)
        self.actionSave_Video.triggered.connect(VideoMultiplexer.CreateBitratePlot)
        self.actionShow_Video_Info.triggered.connect(VideoMultiplexer.showVideoInfo)
        self.actionConverter_Video.triggered.connect(VideoMultiplexer.convertVideo)
        self.actionInvert_Color.triggered['bool'].connect(VideoMultiplexer.invertColorFilter)
        self.actionCanny_edge_detection.triggered['bool'].connect(VideoMultiplexer.edgeFilter)
        self.actionMono_Filter.triggered['bool'].connect(VideoMultiplexer.monoFilter)
        self.actionDraw_Pinpoint.triggered['bool'].connect(VideoMultiplexer.pointDrawer)
        self.actionMagnifying_glass.triggered['bool'].connect(VideoMultiplexer.magnifier)
        self.actionAuto_Contrast_Filter.triggered['bool'].connect(VideoMultiplexer.autoContrastFilter)
        self.actionCreate_Mosaic.triggered['bool'].connect(VideoMultiplexer.createMosaic)
        self.actionDraw_Line.triggered['bool'].connect(VideoMultiplexer.lineDrawer)
        self.actionObject_Tracking.triggered['bool'].connect(VideoMultiplexer.ojectTracking)
        self.actionDraw_Polygon.triggered['bool'].connect(VideoMultiplexer.polygonDrawer)
        self.actionRuler.triggered['bool'].connect(VideoMultiplexer.VideoRuler)
        self.actionHandDraw.triggered['bool'].connect(VideoMultiplexer.VideoHandDraw)
        self.actionMirroredH.triggered['bool'].connect(VideoMultiplexer.MirrorHorizontalFilter)
        self.actionCensure.triggered['bool'].connect(VideoMultiplexer.VideoCensure)
        self.actionCenter_on_Footprint.toggled['bool'].connect(VideoMultiplexer.centerMapFootprint)
        self.actionCenter_on_Platform.toggled['bool'].connect(VideoMultiplexer.centerMapPlatform)
        self.actionCenter_Target.toggled['bool'].connect(VideoMultiplexer.centerMapTarget)
        self.actionNDVI.triggered['bool'].connect(VideoMultiplexer.NDVIFilter)
        self.actionCapture_Georeferenced_Frame.triggered.connect(VideoMultiplexer.ExtractCurrentGeoFrame)
        QtCore.QMetaObject.connectSlotsByName(VideoMultiplexer)

    def retranslateUi(self, VideoMultiplexer):
        _translate = QtCore.QCoreApplication.translate
        VideoMultiplexer.setWindowTitle(_translate("VideoMultiplexer", "Video Multiplexer"))
        self.label.setText(_translate("VideoMultiplexer", "Input Video File (e.g video.ts)"))
        self.label_2.setText(_translate("VideoMultiplexer", "Input Metadata File (e.g video_metadata.csv)"))
        self.label_3.setText(_translate("VideoMultiplexer", "Output Video File (e.g out_video.ts)"))
        self.label_4.setText(_translate("VideoMultiplexer", "Metadata Field Mappinf File (e.g MISB_field_mapping.csv) (Optional)"))
        self.checkBox.setText(_translate("VideoMultiplexer", "Calculate coordinates using sensor information (Optional)"))
        self.label_5.setText(_translate("VideoMultiplexer", "Average Elevation (meters) ( Optional)"))
        self.pushButton_6.setText(_translate("VideoMultiplexer", "Create MISB"))
        self.actionGray.setText(_translate("VideoMultiplexer", "Gray Scale"))
        self.actionEdge_Detection.setText(_translate("VideoMultiplexer", "Edge Detection"))
        self.actionCapture_Current_Frame.setText(_translate("VideoMultiplexer", "Capture Current Frame"))
        self.actionCapture_Current_Frame.setShortcut(_translate("VideoMultiplexer", "Ctrl+Shift+Q"))
        self.actionExtract_All_Frames.setText(_translate("VideoMultiplexer", "Extract All Frames"))
        self.actionExtract_All_Frames.setShortcut(_translate("VideoMultiplexer", "Ctrl+Shift+A"))
        self.actionShow_Metadata.setText(_translate("VideoMultiplexer", "Show Metadata"))
        self.actionShow_Metadata.setShortcut(_translate("VideoMultiplexer", "Ctrl+Shift+M"))
        self.actionConverter_Video.setText(_translate("VideoMultiplexer", "Converter Video"))
        self.actionSave_Video_Info.setText(_translate("VideoMultiplexer", "Save Video Info to Json"))
        self.actionAudio.setText(_translate("VideoMultiplexer", "Show Audio"))
        self.actionVideo.setText(_translate("VideoMultiplexer", "Show Video"))
        self.actionAudio_Video.setText(_translate("VideoMultiplexer", "Show All"))
        self.actionSave_Audio.setText(_translate("VideoMultiplexer", "Save Audio"))
        self.actionSave_Video.setText(_translate("VideoMultiplexer", "Save Video"))
        self.actionSave_All.setText(_translate("VideoMultiplexer", "Save All"))
        self.actionShow_Video_Info.setText(_translate("VideoMultiplexer", "Show Video Info"))
        self.actionInvert_Color.setText(_translate("VideoMultiplexer", "Invert Color"))
        self.actionMono_Filter.setText(_translate("VideoMultiplexer", "Mono Filter"))
        self.actionCanny_edge_detection.setText(_translate("VideoMultiplexer", "Canny edge detection"))
        self.actionZoom_Rectangle.setText(_translate("VideoMultiplexer", "Zoom Rectangle"))
        self.actionMagnifying_glass.setText(_translate("VideoMultiplexer", "Magnifying glass"))
        self.actionAuto_Contrast_Filter.setText(_translate("VideoMultiplexer", "Auto Contrast Filter"))
        self.actionCreate_Mosaic.setText(_translate("VideoMultiplexer", "Create Mosaic"))
        self.actionDraw_Pinpoint.setText(_translate("VideoMultiplexer", "Draw Pinpoint"))
        self.actionDraw_Line.setText(_translate("VideoMultiplexer", "Draw Line"))
        self.actionDraw_Polygon.setText(_translate("VideoMultiplexer", "Draw Polygon"))
        self.actionDraw_Polygon.setIconText(_translate("VideoMultiplexer", "Draw Polygon"))
        self.actionDraw_Polygon.setToolTip(_translate("VideoMultiplexer", "Draw Polygon"))
        self.actionObject_Tracking.setText(_translate("VideoMultiplexer", "Object Tracking"))
        self.actionRuler.setText(_translate("VideoMultiplexer", "Ruler"))
        self.actionHandDraw.setText(_translate("VideoMultiplexer", "Hand Draw"))
        self.actionMirroredH.setText(_translate("VideoMultiplexer", "Horizontal Mirrored"))
        self.actionCensure.setText(_translate("VideoMultiplexer", "Censure"))
        self.actionCensure.setToolTip(_translate("VideoMultiplexer", "Censure"))
        self.actionRemove_Last_censured.setText(_translate("VideoMultiplexer", "Remove Last"))
        self.actionRemove_All_censured.setText(_translate("VideoMultiplexer", "Remove All"))
        self.actionDraw_Polygon_remove_last.setText(_translate("VideoMultiplexer", "Remove Last Polygon"))
        self.actionDraw_Polygon_remove_last.setIconText(_translate("VideoMultiplexer", "Draw Polygon"))
        self.actionDraw_Polygon_remove_last.setToolTip(_translate("VideoMultiplexer", "Remove Last Polygon"))
        self.actionDraw_Polygon_remove_all.setText(_translate("VideoMultiplexer", "Remove All Polygon"))
        self.actionDraw_Polygon_remove_all.setIconText(_translate("VideoMultiplexer", "Draw Polygon"))
        self.actionDraw_Polygon_remove_all.setToolTip(_translate("VideoMultiplexer", "Remove All Polygon"))
        self.actionRemove_Last_Pinpoint.setText(_translate("VideoMultiplexer", "Remove Last Pinpoint"))
        self.actionRemove_Last_Pinpoint.setToolTip(_translate("VideoMultiplexer", "Remove Last Pinpoint"))
        self.actionRemove_All_Pinpoint.setText(_translate("VideoMultiplexer", "Remove All Pinpoint"))
        self.actionRemove_All_Pinpoint.setToolTip(_translate("VideoMultiplexer", "Remove All Pinpoint"))
        self.actionRemove_All_Line.setText(_translate("VideoMultiplexer", "Remove All"))
        self.actionRemove_All_Line.setToolTip(_translate("VideoMultiplexer", "Remove All"))
        self.actionLast_Segment_Line.setText(_translate("VideoMultiplexer", "Remove Last Segment"))
        self.actionLast_Segment_Line.setToolTip(_translate("VideoMultiplexer", "Remove Last Segment"))
        self.actionRemove_Last_Line.setText(_translate("VideoMultiplexer", "Remove Last Line"))
        self.actionRemove_Last_Line.setToolTip(_translate("VideoMultiplexer", "Remove Last Line"))
        self.actionCenter_on_Platform.setText(_translate("VideoMultiplexer", "Center on Platform"))
        self.actionCenter_on_Footprint.setText(_translate("VideoMultiplexer", "Center on Footprint"))
        self.actionCenter_Target.setText(_translate("VideoMultiplexer", "Center on Target"))
        self.actionNDVI.setText(_translate("VideoMultiplexer", "NDVI"))
        self.actionCapture_Georeferenced_Frame.setText(_translate("VideoMultiplexer", "Capture Georeferenced Frame"))

from QGIS_FMV.gui import resources_rc
